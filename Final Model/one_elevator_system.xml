<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
int[0,1] door_closed;
int[0,1] stopped;
int[0,1] elev_dests[4];  // 0 for no dest, 1 for dest (internal)
int[-1,1] build_dests[4];  // 0 for no dest, 1 for going up, -1 for going down
int[-1,1] direction;
int floor;
int [0,1] blocked;
chan go;
chan load;
</declaration><template><name x="5" y="5">Door</name><parameter>int[0,1] &amp;door_closed, int[0,1] &amp;elev_dests[4], int[-1,1] &amp;build_dests[4], int[-1,1] &amp;direction, chan &amp;go, chan &amp;load, int &amp;floor, int[0,1] &amp;blocked</parameter><declaration>// Place local declarations here.
clock i;</declaration><location id="id0" x="-256" y="392"></location><location id="id1" x="-88" y="280"></location><location id="id2" x="472" y="408"></location><location id="id3" x="232" y="408"></location><location id="id4" x="-8" y="408"></location><location id="id5" x="-88" y="520"><name x="-208" y="512">direction_choice</name></location><location id="id6" x="232" y="128"><name x="176" y="120">down</name></location><location id="id7" x="-8" y="128"><name x="-40" y="120">up</name></location><location id="id8" x="-88" y="24"><name x="-72" y="8">waiting</name></location><location id="id9" x="136" y="-224"><name x="72" y="-232">opening</name><label kind="invariant" x="152" y="-232">i &lt;= 3</label><urgent/></location><location id="id10" x="-88" y="-224"><name x="-72" y="-232">closing</name><label kind="invariant" x="-144" y="-232">i &lt;= 3</label></location><location id="id11" x="136" y="24"><name x="96" y="-8">start</name></location><location id="id12" x="24" y="-336"><name x="8" y="-328">open</name><label kind="invariant" x="0" y="-368">i &lt;= 10</label><label kind="comments">close before 10 seconds.</label></location><init ref="id11"/><transition><source ref="id10"/><target ref="id9"/><label kind="guard" x="-16" y="-272">blocked == 1</label><nail x="24" y="-288"/></transition><transition><source ref="id10"/><target ref="id10"/><nail x="-16" y="-248"/><nail x="-16" y="-192"/></transition><transition><source ref="id12"/><target ref="id12"/><nail x="64" y="-304"/><nail x="-16" y="-304"/></transition><transition><source ref="id9"/><target ref="id9"/><nail x="56" y="-248"/><nail x="56" y="-192"/></transition><transition><source ref="id0"/><target ref="id5"/><label kind="assignment" x="-264" y="464">direction := 0</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="-280" y="304">forall
(a:int[0,3])
elev_dests[a] == 0</label></transition><transition><source ref="id1"/><target ref="id5"/><label kind="guard" x="-148" y="370">exists
(a:int[0,3])
elev_dests[a] == 1</label></transition><transition><source ref="id8"/><target ref="id1"/><label kind="guard" x="-224" y="168">exists
(a:int[0,3])
elev_dests[a] == 1 or
build_dests[a] != 0</label></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-24" y="544">direction == -1</label><nail x="-16" y="584"/><nail x="472" y="584"/></transition><transition><source ref="id5"/><target ref="id3"/><label kind="guard" x="-24" y="496">direction == 0</label><nail x="232" y="520"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="guard" x="-24" y="464">direction == 1</label><nail x="-8" y="456"/></transition><transition><source ref="id2"/><target ref="id6"/><label kind="guard" x="512" y="408">floor == 3 or
build_dests[0] == 1 or
exists
(a:int[0,3])
(a &lt; floor and
(elev_dests[a] == 1 or
build_dests[a] == -1))</label></transition><transition><source ref="id2"/><target ref="id7"/><label kind="guard" x="512" y="272">floor == 0 or
build_dests[0] == 0 and
!exists
(a:int[0,3])
(a &lt; floor and
(elev_dests[a] == 1 or
build_dests[a] == -1))</label></transition><transition><source ref="id3"/><target ref="id6"/><label kind="guard" x="256" y="448">floor == 3 or
exists
(a:int[0,3])
(a &lt; floor and
(elev_dests[a] == 1 or
build_dests[a] != 0))</label></transition><transition><source ref="id3"/><target ref="id7"/><label kind="guard" x="256" y="336">floor == 0 or
exists
(a:int[0,3])
(a &gt;= floor and
(elev_dests[a] == 1 or
build_dests[a] != 0))</label></transition><transition><source ref="id4"/><target ref="id7"/><label kind="guard" x="-64" y="184">floor == 0 or
build_dests[3] == -1 or
exists
(a:int[0,3])
(a &gt; floor and
(elev_dests[a] == 1 or
build_dests[a] == 1))</label></transition><transition><source ref="id4"/><target ref="id6"/><label kind="guard" x="16" y="304">floor == 3 or
build_dests[3] == 0 and
!exists
(a:int[0,3])
(a &gt; floor and
(elev_dests[a] == 1 or
build_dests[a] == 1))</label></transition><transition><source ref="id6"/><target ref="id11"/><label kind="synchronisation" x="200" y="32">go!</label><label kind="assignment" x="136" y="56">direction := -1</label><nail x="232" y="24"/></transition><transition><source ref="id7"/><target ref="id11"/><label kind="synchronisation" x="0" y="32">go!</label><label kind="assignment" x="0" y="56">direction := 1</label><nail x="-8" y="24"/></transition><transition><source ref="id8"/><target ref="id8"/><label kind="guard" x="-304" y="24">forall
(a:int[0,3])
elev_dests[a] == 0 and
build_dests[a] == 0</label><label kind="assignment" x="-240" y="104">direction := 0</label><nail x="-152" y="24"/><nail x="-152" y="128"/><nail x="-120" y="128"/></transition><transition><source ref="id10"/><target ref="id8"/><label kind="guard" x="-136" y="-200">i &gt;= 3</label><label kind="assignment" x="-248" y="-160">door_closed := 1, i := 0</label></transition><transition><source ref="id12"/><target ref="id10"/><label kind="guard" x="-48" y="-360">i &gt;= 5</label><label kind="assignment" x="-128" y="-328">i := 0</label><nail x="-88" y="-336"/></transition><transition><source ref="id9"/><target ref="id12"/><label kind="guard" x="144" y="-272">i &gt;= 3</label><label kind="assignment" x="144" y="-336">i := 0, door_closed := 0</label><nail x="136" y="-336"/></transition><transition><source ref="id11"/><target ref="id9"/><label kind="synchronisation" x="144" y="-40">load?</label><label kind="assignment" x="144" y="-144">i := 0, door_closed := 0</label></transition></template><template><name>Elevator</name><parameter>int[0,1] &amp;door_closed, int[0,1] &amp;elev_dests[4], int[-1,1] &amp;build_dests[4], int[-1,1] &amp;direction, chan &amp;go, chan &amp;load, int &amp;floor</parameter><location id="id13" x="456" y="376"><name x="446" y="346">start</name></location><location id="id14" x="288" y="376"><name x="216" y="368">loading0</name><urgent/></location><location id="id15" x="288" y="24"><name x="216" y="16">loading1</name><urgent/></location><location id="id16" x="288" y="-280"><name x="216" y="-288">loading2</name><urgent/></location><location id="id17" x="288" y="-584"><name x="216" y="-592">loading3</name><urgent/></location><location id="id18" x="88" y="376"><name x="72" y="344">floor0</name></location><location id="id19" x="88" y="-584"><name x="72" y="-616">floor3</name></location><location id="id20" x="88" y="-280"><name x="72" y="-312">floor2</name></location><location id="id21" x="88" y="24"><name x="72" y="-8">floor1</name></location><init ref="id13"/><transition><source ref="id13"/><target ref="id14"/><label kind="synchronisation" x="328" y="376">load!</label></transition><transition><source ref="id17"/><target ref="id19"/><label kind="synchronisation" x="256" y="-544">go?</label><nail x="288" y="-544"/><nail x="88" y="-544"/></transition><transition><source ref="id19"/><target ref="id17"/><label kind="guard" x="128" y="-672">elev_dests[3] == 1 or
build_dests[3] != 0</label><label kind="synchronisation" x="168" y="-632">load!</label><label kind="assignment" x="296" y="-632">elev_dests[3] := 0,
build_dests[3] := 0</label><nail x="88" y="-632"/><nail x="288" y="-632"/></transition><transition><source ref="id16"/><target ref="id20"/><label kind="synchronisation" x="256" y="-232">go?</label><nail x="288" y="-232"/><nail x="88" y="-232"/><nail x="88" y="-264"/></transition><transition><source ref="id20"/><target ref="id16"/><label kind="guard" x="288" y="-424">elev_dests[2] == 1 or
(build_dests[2] == 1 and direction == 1 or
build_dests[2] == -1 and direction == -1) or
(forall(a:int[0,3])
elev_dests[a] == 0) and
build_dests[2] != 0</label><label kind="synchronisation" x="168" y="-328">load!</label><label kind="assignment" x="296" y="-328">elev_dests[2] := 0,
build_dests[2] := 0</label><nail x="88" y="-328"/><nail x="288" y="-328"/></transition><transition><source ref="id15"/><target ref="id21"/><label kind="synchronisation" x="256" y="72">go?</label><nail x="288" y="72"/><nail x="88" y="72"/></transition><transition><source ref="id21"/><target ref="id15"/><label kind="guard" x="288" y="-128">elev_dests[1] == 1 or
(build_dests[1] == 1 and direction == 1 or
build_dests[1] == -1 and direction == -1) or
(forall(a:int[0,3])
elev_dests[a] == 0) and
build_dests[1] != 0</label><label kind="synchronisation" x="168" y="-32">load!</label><label kind="assignment" x="296" y="-32">elev_dests[1] := 0,
build_dests[1] := 0</label><nail x="88" y="-32"/><nail x="288" y="-32"/></transition><transition><source ref="id14"/><target ref="id18"/><label kind="synchronisation" x="256" y="424">go?</label><nail x="288" y="424"/><nail x="88" y="424"/></transition><transition><source ref="id18"/><target ref="id14"/><label kind="guard" x="160" y="288">elev_dests[0] == 1 or
build_dests[0] != 0</label><label kind="synchronisation" x="152" y="328">load!</label><label kind="assignment" x="296" y="328">elev_dests[0] := 0,
build_dests[0] := 0</label><nail x="88" y="328"/><nail x="288" y="328"/></transition><transition><source ref="id21"/><target ref="id18"/><label kind="guard" x="128" y="160">door_closed == 1 and
direction == -1 and
elev_dests[1] == 0 and
build_dests[1] != -1</label><label kind="assignment" x="128" y="232">direction := -1,
floor--</label><nail x="120" y="40"/><nail x="120" y="360"/></transition><transition><source ref="id20"/><target ref="id21"/><label kind="guard" x="128" y="-208">door_closed == 1 and
direction == -1 and
elev_dests[2] == 0 and
build_dests[2] != -1</label><label kind="assignment" x="128" y="-144">direction := -1,
floor--</label><nail x="120" y="-264"/><nail x="120" y="8"/></transition><transition><source ref="id19"/><target ref="id20"/><label kind="guard" x="128" y="-504">door_closed == 1 and
direction == -1 and
elev_dests[3] == 0 and
build_dests[3] != -1</label><label kind="assignment" x="128" y="-440">direction := -1,
floor--</label><nail x="120" y="-568"/><nail x="120" y="-296"/></transition><transition><source ref="id20"/><target ref="id19"/><label kind="guard" x="-88" y="-328">door_closed == 1 and
direction == 1 and
elev_dests[2] == 0 and
build_dests[2] != 1</label><label kind="assignment" x="-32" y="-376">direction := 1,
floor++</label><nail x="56" y="-296"/><nail x="56" y="-568"/></transition><transition><source ref="id21"/><target ref="id20"/><label kind="guard" x="-88" y="-32">door_closed == 1 and
direction == 1 and
elev_dests[1] == 0 and
build_dests[1] != 1</label><label kind="assignment" x="-32" y="-72">direction := 1,
floor++</label><nail x="56" y="8"/><nail x="56" y="-264"/></transition><transition><source ref="id18"/><target ref="id21"/><label kind="guard" x="-88" y="320">door_closed == 1 and
direction == 1 and
elev_dests[0] == 0 and
build_dests[0] != 1</label><label kind="assignment" x="-32" y="280">direction := 1,
floor++</label><nail x="56" y="360"/><nail x="56" y="40"/></transition></template><system>// Place template instantiations here.
door = Door(door_closed, elev_dests, build_dests, direction, go, load, floor, blocked);
elevator = Elevator(door_closed, elev_dests, build_dests, direction, go, load, floor);

// List one or more processes to be composed into a system.
system door, elevator;
</system></nta>